<?xml version="1.0"?>
<Simulation>

  <TestInfo>
    <name>framework/ROM/TimeSeries/DMD.Para_DMDC_SES</name>
    <author>alfoa</author>
    <created>2022-01-05</created>
    <classesTested>ROM.SupervisedLearning.DynamicModeDecompositionControl</classesTested>
    <description>
       This test is aimed to check the mechanics of the DMDC ROM using the standard SVD-based
       algorithm. The shows how to construct a parametrized DMDC model. The parameters here are represented
       by 1 ``uncertanties'', namely ``ActuatorParameter''. The model is then evaluated in a simple
       MonteCarlo sampling.
       In addition, this input tests the capability for the user to export the ROM info in an XML output
       file (requirement).
    </description>
    <revisions>
      <revision author="haoyuwang" date="2022-01-05">Initial Release of SES test</revision>
    </revisions>
  </TestInfo>

  <RunInfo>
    <WorkingDir>DMDc_FARM_Folder</WorkingDir>
    <Sequence>readTrainData,DMDCTrain,pickleRom,stats,writeOut</Sequence>
    <batchSize>1</batchSize>
  </RunInfo>

  <Files>
    <!--  we load a synthesized data with 1 time, 1 actuation(u), 1 state(x) and 2 output(y) -->
	  <!-- Note: Adjacent rows should have constant time interval for DMDC -->
    <Input name="TrainDataFile">SES_Data_index_Para.csv</Input>
    <Input name="ROMpk" type="">ROMpk</Input>
  </Files>
  
  <Models>
    <ROM name="DMDrom" subType="DMDC">
      <!-- Target contains Time, StateVariable Names (x) and OutputVariable Names (y) in training data -->
      <Target>Time,SES.CS.W_totalSetpoint,Electric_Power,Firing_Temperature</Target>
      <!-- Actuator Variable Names (u) -->
      <actuators>add.y</actuators>
      <!-- StateVariables Names (x) -->
      <stateVariables>SES.CS.W_totalSetpoint</stateVariables>
      <!-- Pivot variable (e.g. Time) -->
      <pivotParameter>Time</pivotParameter>
      <!-- rankSVD: -1 = No truncation; 0 = optimized truncation; pos. int = truncation level -->
      <rankSVD>-1</rankSVD>
      <!-- SubtractNormUXY: True = will subtract the initial values from U,X,Y -->
      <subtractNormUXY>True</subtractNormUXY>
	    
      <!-- Features are the variable names for predictions: Actuator "u", scheduling parameters, and initial states -->
      <Features>add.y,ActuatorParameter,x1_init</Features>
      <!-- Initialization Variables-->
      <initStateVariables>x1_init</initStateVariables>
    </ROM>
  </Models>

  <Steps>
    <IOStep name="readTrainData">
      <Input class="Files" type="">TrainDataFile</Input>
      <Output class="DataObjects" type="HistorySet">TrainData</Output>
    </IOStep>
	  <RomTrainer name="DMDCTrain">
      <Input class="DataObjects" type="HistorySet">TrainData</Input>
      <Output class="Models" type="ROM">DMDrom</Output>
    </RomTrainer>
    <IOStep name="pickleRom">
      <Input class="Models" type="ROM">DMDrom</Input>
      <Output class="Files" type="">ROMpk</Output>
    </IOStep>
    <IOStep name="stats">
      <Input class="Models" type="ROM">DMDrom</Input>
      <Output class="DataObjects" type="DataSet">rom_stats</Output>
    </IOStep>
    <IOStep name="writeOut" pauseAtEnd="True">
      <Input class="DataObjects" type="DataSet">rom_stats</Input>
      <Output class="OutStreams" type="Print">DMDcCxCoeff </Output>
    </IOStep>
  </Steps>

  <OutStreams>
    <Print name="DMDcCxCoeff">
      <type>csv</type>
      <source>rom_stats</source>
    </Print>
    <Print name="outputData">
      <type>csv</type>
      <source>outputData</source>
    </Print>
  </OutStreams>

  <DataObjects>
    <HistorySet name="TrainData">
      <Input>ActuatorParameter,x1_init</Input>
      <Output>add.y,Time,SES.CS.W_totalSetpoint,Electric_Power,Firing_Temperature</Output>
      <options>
        <pivotParameter>Time</pivotParameter>
      </options>
    </HistorySet>
    <DataSet name="rom_stats"/>
  </DataObjects>


</Simulation>
