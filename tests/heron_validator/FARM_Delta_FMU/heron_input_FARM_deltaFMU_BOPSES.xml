<HERON>
  <TestInfo>
    <name>validator</name>
    <author>haoyuwang</author>
    <created>2022-01-10</created>
    <description>
      Tests using a parameterized validator to modify behavior of a dispatch optimizer. Uses the "FARM_Beta" validator.
    </description>
    <classesTested>HERON</classesTested>
  </TestInfo>

  <Case name="Sweep_Runs">
    <mode>sweep</mode>
    <num_arma_samples>3</num_arma_samples>
    <time_discretization>
      <time_variable>Time</time_variable>
      <end_time>11</end_time>
      <num_steps>12</num_steps>
    </time_discretization>
    <economics>
      <ProjectTime>1</ProjectTime>
      <DiscountRate>0.08</DiscountRate>
      <tax>0.0</tax>
      <inflation>0.0</inflation>
      <verbosity>50</verbosity>
    </economics>
    <dispatcher>
      <pyomo>
        <rolling_window_length>200</rolling_window_length>
      </pyomo>
    </dispatcher>
    
    <validator>
      <FARM_Delta_FMU>
        <ComponentForFARM name="DualUnit">
          <FMUFile>%FARM%/tests/heron_validator/FARM_Delta_FMU/FMUs/BOP_SES_empty_MWinput.fmu</FMUFile>
          <ComponentNamesForFMUInput> SES, BOP </ComponentNamesForFMUInput>
          <setpointsShiftStep> 2 </setpointsShiftStep>
          <FMUSimulationStep> 10. </FMUSimulationStep>       
          <!-- <StateVariableSelectionXML>%FARM%/tests/heron_validator/FARM_Delta_FMU_StateVariableSelection/svs_Workflow_Writer/StateVariableSelectionTemplate/simulatedData/DMDcCxCoeff_SES_BOP.xml</StateVariableSelectionXML> -->
          <InputVarNames> SES_Demand_MW, BOP_Demand_MW </InputVarNames>
          <StateVarNames> SES.GTunit.combChamber.fluegas.h, BOP.CS.PID_TCV_opening.addP.u2 </StateVarNames>
          <OutputVarNames> SES_Electric_Power, SES_Firing_Temperature, BOP_Electric_Power, BOP_Turbine_Pressure </OutputVarNames>
          <LearningSetpoints> 24., 38., 17., 31., 45., 24., 38., 17., 52., 31., 45., 24., 38., 17., 52., 31., 45., 24., 38., 17., 52., 31., 45., 24., 38., 52., 31., 45., 38., 52., 45., 17., 52., 24., 17., 31., 1086., 1075., 1097., 1086., 1075., 1097., 1086., 1108., 1075., 1097., 1086., 1108., 1097., 1119., 1086., 1108., 1097., 1119., 1108., 1130., 1097., 1119., 1108., 1130., 1119., 1108., 1130., 1119., 1130., 1119., 1130., 1075., 1130., 1075., 1086., 1075. </LearningSetpoints>          
          <NeighborSetpointsThreshold> 1.0 </NeighborSetpointsThreshold>
          <OpConstraintsUpper> 50.0E6, 1673., 13.5E8, 53.8E5 </OpConstraintsUpper>
          <OpConstraintsLower> 13.5E6, 1089., 8.25E8, 51.8E5 </OpConstraintsLower>
          <RollingWindowWidth> 1800 </RollingWindowWidth>
        </ComponentForFARM>
      </FARM_Delta_FMU>
    </validator>
  </Case>

  <Components>
    <Component name="BOP">
      <produces resource="electricity" dispatch="independent">
        <capacity resource="electricity">
          <!-- <fixed_value>1500</fixed_value> -->
          <sweep_values> 1500,1510</sweep_values>
        </capacity>
      </produces>
      <economics>
        <lifetime>30</lifetime>
		    <CashFlow name="e_prod" type="repeating" taxable='True' inflation='none' mult_target='False'>
          <driver>
			      <Function method="electric_prod">transfers</Function>
          </driver>
          <reference_price>
            <fixed_value>-100</fixed_value>
          </reference_price>
        </CashFlow>
      </economics>
    </Component>
    <Component name="SES">
      <produces resource="electricity" dispatch="independent">
        <capacity resource="electricity">
          <fixed_value>100</fixed_value>
        </capacity>
      </produces>
      <economics>
        <lifetime>30</lifetime>
        <CashFlow name="e_prod" type="repeating" taxable='True' inflation='none' mult_target='False'>
          <driver>
            <Function method="electric_prod">transfers</Function>
          </driver>
          <reference_price>
            <fixed_value>-200</fixed_value>
          </reference_price>
        </CashFlow>
      </economics>
    </Component>
    <Component name="electr_market">
      <demands resource="electricity" dispatch="dependent">
        <capacity resource="electricity">   
          <fixed_value>-1e5</fixed_value>
          <!-- <ARMA variable="Signal">flex</ARMA> -->
          <!-- <multiplier>1</multiplier> -->
        </capacity>
        <minimum>
          <ARMA variable="Signal">flex</ARMA>
          <multiplier>1</multiplier>
        </minimum>
      </demands>
      <economics>
        <lifetime>30</lifetime>
        <CashFlow name="e_sales" type="repeating" taxable='True' inflation='none' mult_target='False'>
          <driver>
            <Function method="electric_consume">transfers</Function>
            <!-- <resource multiplier="-1" absolute="True">electricity</resource> -->
          </driver>
          <reference_price>
            <fixed_value>-1000</fixed_value>
          </reference_price>
        </CashFlow>
      </economics>
    </Component>
  </Components>
  <DataGenerators>
    <ARMA name='flex' variable="Signal">%FARM%/tests/heron_validator/ARMA/ARMA_Sine_12h/arma_Sine_12h.pk</ARMA>
    <Function name="transfers">transfers.py</Function>
  </DataGenerators>
</HERON>